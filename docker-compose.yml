---
version: '3'
services:
  ## MySQL Docker Compose Config
  postgres-group:
    container_name: postgres-group
    image: postgres
    environment:
      POSTGRES_DB: group-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - ./postgres-group:/data/postgres
    expose:
      - "5431"
    ports:
      - "5431:5431"
    command: -p 5431
    restart: unless-stopped

  postgres-check:
    container_name: postgres-check
    image: postgres
    environment:
      POSTGRES_DB: check-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - ./postgres-check:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  postgres-grade:
      container_name: postgres-grade
      image: postgres
      environment:
        POSTGRES_DB: grade-service
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: password
        PGDATA: /data/postgres
      volumes:
        - ./postgres-grade:/data/postgres
      expose:
        - "5433"
      ports:
        - "5433:5433"
      command: -p 5433
      restart: unless-stopped

  ## Mongo Docker Compose Config
  mongo:
    container_name: mongo
    image: mongo:4.4.14-rc0-focal
    restart: unless-stopped
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data:/data/db


  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## Zipkin
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  ## Eureka Server
  discovery-server:
    image: 192474/discovery-server:latest
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin

  api-gateway:
    image: 192474/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - discovery-server


  ## Student-Service Docker Compose Config
  student-service:
    container_name: student-service
    image: 192474/student-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongo
      - discovery-server
      - api-gateway



  ## Group-Service Docker Compose Config
  group-service:
    container_name: group-service
    image: 192474/group-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-group:5431/group-service
    depends_on:
      - postgres-group
      - broker
      - zipkin
      - discovery-server
      - api-gateway

  ## Check-Service Docker Compose Config
  check-service:
    container_name: check-service
    image: 192474/check-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-check:5432/check-service
    depends_on:
      - postgres-check
      - discovery-server
      - api-gateway

  ## Grade-Service Docker Compose Config
  grade-service:
    container_name: grade-service
    image: 192474/grade-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-grade:5433/grade-service
    depends_on:
      - postgres-grade
      - discovery-server
      - api-gateway

  ## Notification-Service Docker Compose Config
  notification-service:
    container_name: notification-service
    image: 192474/notification-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - broker
      - discovery-server
      - api-gateway

      ## Prometheus
  prometheus:
        image: prom/prometheus:v2.37.1
        container_name: prometheus
        restart: unless-stopped
        ports:
          - "9090:9090"
        volumes:
          - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        depends_on:
          - student-service
          - check-service
          - group-service
          - notification-service
          - grade-service


  grafana:
        image: grafana/grafana-oss:8.5.2
        container_name: grafana
        restart: unless-stopped
        ports:
          - "3000:3000"
        links:
          - prometheus:prometheus
        volumes:
          - ./grafana:/var/lib/grafana
        environment:
          - GF_SECURITY_ADMIN_USER=admin
          - GF_SECURITY_ADMIN_PASSWORD=password